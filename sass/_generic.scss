.button {
	background: -webkit-gradient(linear,left top,right top,from($c-cod-gray),color-stop(50%,$c-white),color-stop(50%,transparent)) 100% 0/200% 200% $c-cod-gray;
	background: linear-gradient(90deg,$c-cod-gray 0,$c-white 50%,transparent 0) 100% 0/200% 200% $c-cod-gray;
	color: $c-white;
	display: inline-block;
	font-style: italic;
	min-height: 40px;
	min-width: 218px;
	padding: 10px 0;
	overflow: hidden;
	transition: $transition ease;
	text-align: center;
	position: relative;
	background-position: 100% 0;

	&:hover {
		@include mq('lg') {
			background-position: 0 0;
		}
	}

	&:focus,
	&:active {
		@include mq('lg') {
			// background-position: -100% 0;
			// background-color: $c-white;
			// color: $c-cod-gray;
			border: $border;
		}
	}

	// .button.is-disabled
	@include state('disabled') {
		background-color: $c-alto;
		pointer-events: none;
	}
}

.link {
	color: transparent;
	cursor: pointer;
	font-style: italic;
	display: inline-block;
	background: -webkit-gradient(linear,left top,right top,from($c-tundora),color-stop(50%,$c-gray),color-stop(50%,transparent)) 100% 0/200% 200% $c-cod-gray;
	background: linear-gradient(90deg,$c-tundora 0,$c-gray 50%,transparent 0) 100% 0/200% 200% $c-cod-gray;
	-webkit-background-clip: text;
	background-clip: text;
	overflow: hidden;
	transition: $transition ease;
	position: relative;
	vertical-align: bottom;

	&:hover {
		@include mq('md') {
			background-position: 0 0;
		}

		&::after {
			transform: translateX(-101%);
		}
	}

	&::after {
		@include pseudo;
		background-color: $c-cod-gray;
		bottom: 0;
		height: 1px;
		transition: $transition ease;
		width: 100%;
	}

}

.close {
	cursor: pointer;
	display: block;
	height: 13px;
	position: relative;
	width: 40px;
	z-index: 3;

	&::before,
	&::after {
		@include pseudo();
		background-color: $c-cod-gray;
		height: 1px;
		left: 0;
		width: 40px;
	}

	&:before {
		top: 6px;
		transform: rotate(-20deg);
	}

	&:after {
		bottom: 6px;
		transform: rotate(20deg);
	}

	&:focus,
	&:hover {
		&:before {
			transform: rotate(0deg);
			transition: transform ($transition/3) ease ($transition/3);
		}
		&:after {
			transform: rotate(-0deg);
			transition: transform ($transition/3) ease ($transition/3);
		}
	}
}